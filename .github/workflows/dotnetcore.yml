name: .NET Core

on:
  push:
    branches: 
      - develop

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.100
    - name: Build win
      run: |
        dotnet publish -c Release -r win10-x64 /p:PublishSingleFile=true
        cd /home/runner/work/UnitystationLauncher/UnitystationLauncher/UnitystationLauncher/bin/Release/netcoreapp3.0/win10-x64/publish ; zip -r ../win.zip *
    - name: Create a Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Unitystation Hub Release
          draft: false
          prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path:  |
          ./win.zip
        asset_name: win.zip
        asset_content_type: application/zip

